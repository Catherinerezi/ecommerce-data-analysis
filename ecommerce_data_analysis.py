# -*- coding: utf-8 -*-
"""ecommerce-data-analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-pTq6D350q5LmdVpiIF-zh1TIzRsv0kw
    
#Import dan membaca data
"""

# Commented out IPython magic to ensure Python compatibility.
import streamlit as st
from scipy.stats import norm
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns
from sklearn.preprocessing import MultiLabelBinarizer

st.sidebar.header("Data source")
up = st.sidebar.file_uploader("Upload CSV", type=["csv"])
use_repo = st.sidebar.checkbox("Use raw_data.csv from repo", value=not up)

@st.cache_data
def load_df(src):
    return pd.read_csv(src)

if up:
    df = load_df(up)
elif use_repo:
    df = load_df("raw_data.csv")
else:
    st.stop()

st.success(f"Loaded: {df.shape[0]} rows × {df.shape[1]} cols")
with st.expander("Sample"):
    st.dataframe(df.head())

"""Data Understanding"""

df.head()

df.describe().T

df.shape

df.info()

df = df.drop(columns=['InvoiceNo', 'CustomerID'])

"""Cek duplikat data"""


"""df.duplicated().sum()

df.isnull().sum()

missing_percentage = df.isnull().sum()/df.shape[0]*100
missing_percentage.sort_values(ascending=False)

df['TotalPrice'] = df['Quantity'] * df['UnitPrice']
df[['Quantity', 'UnitPrice', 'TotalPrice']].describe()"""

"""Cek outlier dari kolom numerik"""

numeric_cols = df.select_dtypes(include=np.number).columns

for col in numeric_cols:
    Q1 = df[col].quantile(0.25)
    Q3 = df[col].quantile(0.75)
    IQR = Q3 - Q1
    lower_bound = Q1 - 1.5 * IQR
    upper_bound = Q3 + 1.5 * IQR

    outliers = df[(df[col] < lower_bound) | (df[col] > upper_bound)]
    outlier_count = len(outliers)
    outlier_percentage = (outlier_count / len(df)) * 100
    print(f"{col}: {outlier_count} outliers ({outlier_percentage:.2f}%)")

"""Untuk Outlier akan dibiarkan untuk kebutuhan analisis.

Selanjutnya karena tidak ada missing values dan data terduplikat, maka kita akan pastikan abhwa di dalam data tidak ada multilabels
"""

# Cek baris yang kemungkinan merupakan header duplikat
suspect_rows = df[df.apply(lambda row: row.astype(str).str.contains("InvoiceNo|Description|Quantity", case=False).any(), axis=1)]

# Tampilkan baris yang mencurigakan
print("Baris yang mencurigakan sebagai header duplikat atau tabel bertumpuk:")
print(suspect_rows)

"""Digunakan kolom 'InvoiceNo', 'Description', dan 'Quantity' karena ketiga kolom tersebut dinilai rawan dalam multilable. Tetapi Index yang muncul menandakan bahwa tidak ada kolom yang multilable

#Feature Engineering"""

need = ["Description","Quantity","InvoiceDate","Country","UnitPrice"]
miss = [c for c in need if c not in df.columns]
if miss:
    st.error(f"Missing required columns: {miss}")
    st.stop()

df = df.drop(columns=[c for c in ["InvoiceNo","CustomerID"] if c in df.columns], errors="ignore")
df = df.dropna(subset=["Description","Quantity","InvoiceDate","Country"]).copy()
df["InvoiceDate"] = pd.to_datetime(df["InvoiceDate"], errors="coerce")
df = df.dropna(subset=["InvoiceDate"]).copy()
df["Month"] = df["InvoiceDate"].dt.to_period("M").astype(str)
df["TotalPrice"] = df["Quantity"] * df["UnitPrice"]
df_ready = df

# Tampilkan hasil akhir (siap dipakai untuk analisis)
display(df_ready.head())

"""#Q1. Produk apa yang paling sering dibeli dalam jumlah besar (Quantity > 10)?"""

df_before = df[["Description", "Quantity"]].head(10)
df_before

df_filtered = df[df["Quantity"] > 10]
df_after = df_filtered[["Description", "Quantity"]].head(10)
df_after

"""Dapat dilihat bahwa pada table pertama bahwa data yang disajikan acak, sehingga menjadi sulit dipahami dan kurang relevan. Setelah dilakukan filtering, data pertama berubah menjadi data pada table kedua yang mana data yang disajikan menjadi lebih tertata dan relevan. Lebih lanjut, pada pada tabel kedua hanya menampilkan data pembelian produk dalam jumlah diatas 10."""

top_products = df_ready.groupby("Description")["Quantity"].sum().sort_values(ascending=False).head(10).reset_index()
top_products

"""Hasil agregasi menunjukkan table diatas dilakukan karena adanya kemungkinan satu produk yang bisa muncul dalam banyak transaksi dengan kuantitas yang berbeda. Hal ini membuat penjumlahan pada total Quantity untuk setiap produk menjadi perlu demi identifikasi produk mana yang secara keseluruhan paling banyak dibeli dalam jumlah besar (lebih dari 10 unit per transaksi). Ini membantu mengungkap pola permintaan massal yang relevan untuk strategi bisnis seperti penawaran grosir, bundling, atau penyediaan stok besar. Jika hanya melihat per baris transaksi tanpa agregasi, kita tidak akan mendapatkan gambaran lengkap tentang produk mana yang paling dominan dalam volume pembelian. <br> <br>

Pada kode diatas juga diurutkan dari yang terbanyak demi kenyaman dalam analisis data
"""

st.header("Q1 — Top products by total quantity")
top_products = (df_ready.groupby("Description")["Quantity"]
                .sum().sort_values(ascending=False).head(10).reset_index())
st.dataframe(top_products)

fig, ax = plt.subplots()
sns.barplot(data=top_products, x="Quantity", y="Description", ax=ax)
ax.set_title("Top 10 Products (Quantity)")
st.pyplot(fig)

"""#Insight:
1. Permintaan massal terfokus pada item tertentu – Produk yang muncul di daftar teratas cenderung merupakan barang yang:
  - Kemungkinan digunakan untuk reseller, event, atau paket bundling.

2. Volume penjualan produk tidak selalu sejalan dengan jumlah transaksi: Produk dengan volume besar belum tentu paling sering muncul dalam transaksi; bisa jadi satu pelanggan membeli dalam jumlah besar.

3. Peluang bundling dan penawaran grosir dimana produk-produk ini cocok untuk strategi:
  - Diskon grosir
  - Promosi beli banyak lebih murah
  - Target untuk pelanggan bisnis (B2B)

#Q2. Bagaimana tren pembelian per bulan selama tahun berjalan?

Sebelumnya kita harus mengetahui isi data tersebut dengan data mentah dibawah ini untuk mengetahui data apa yang kita olah. Pada kasus kali ini, gunakan kolom 'InvoiceDate' dan 'Quantity' untuk menggambarkan dengan lebih jelas mengenai produk yang akan laku dipasaran dalam lingkup per masing-masing bulan selama satu tahun.
"""

df_before = df[["InvoiceDate", "Quantity"]].head(5)
df_before

"""Seperti yang terlihat pada tabel pertama yang merupakan data mentah, data tersebut kurang bisa dibaca dengan baik, terutama untuk melakukan visualisasi dimana dibutuhkan manipulasi data secara lebih efisien."""

df["InvoiceDate"] = pd.to_datetime(df["InvoiceDate"], errors='coerce')

"""Kolom 'InvoiceDate' pada tabel pertama, akan dibaca sebagai string, maka kita akan mengubahnya menjadi datetime demi efektivitas manipulasi dan visualisasi data."""

df["Month"] = df["InvoiceDate"].dt.to_period("M")

df_after = df[["InvoiceDate", "Month", "Quantity"]].head(5)
df_after

"""Tabel diatas adalah contoh data (5 data teratas) dari data yang siap digunakan"""

monthly_trend = df_ready.groupby("Month")["Quantity"].sum().reset_index()

"""Sebelumnya dilakukan pengelompokkan per bulan agar bisa dihitung total pembeliannya, dimana agregasi yang dilakukan mampu menunjukkan  volume pembelian tiap bulan secara keseluruhan. <br><br>
Disinilah fungsi 'convert for plotting' demi kenyamanan visualisasi karena kolom 'Month' bertipe 'period' sehingg harus dibuat menjadi 'string' supaya terlihat jelas sumbu x-nya pada visualisasi data.
"""

st.header("Q2 — Monthly trend")
monthly = df_ready.groupby("Month")["Quantity"].sum().reset_index()
fig2, ax2 = plt.subplots()
sns.lineplot(data=monthly, x="Month", y="Quantity", marker="o", ax=ax2)
ax2.tick_params(axis="x", rotation=45)
ax2.set_title("Monthly Quantity")
st.pyplot(fig2)

"""#Insight:
1. Adanya fluktuasi tren pembelian bulanan dimana beberapa bulan menunjukkan lonjakan tajam dalam jumlah pembelian, sementara bulan lainnya cenderung lebih rendah.
  - Lonjakan tersebut bisa disebabkan oleh musim belanja, promosi besar, atau periode stok ulang pelanggan.

2. Penurunan di bulan tertentu bisa menunjukkan masalah atau momen sepi, contohnya: bulan libur panjang, gangguan operasional, atau berkurangnya kampanye pemasaran.

3. Tren ini penting untuk perencanaan bisnis untuk mengetahui pola bulanan membantu dalam:
  - Menyusun strategi stok dan logistik secara efisien
  - Menentukan waktu terbaik untuk promosi
  - Mengantisipasi periode sepi dengan strategi penjualan baru

#Q3. Negara mana yang memiliki volume pembelian terbesar?"""

df_before = df[["Country", "Quantity"]].head()
df_before

"""Dari table diatas terlihat bahwa meskipun hanya 5 data teratas, tetapi cukup sulit dibaca, lebih lagi untuk dilakukan manipulasi dan analisis serta visualisai untuk melihat pembelian yang dilakukan masing-masing negara."""

country_sales = df_ready.groupby("Country")["Quantity"].sum().sort_values(ascending=False).head(10).reset_index()

"""Sebelumnya dilakukan pengelompokkan untuk membantu menyederhanakan data agar bisa dianalisis secara strategis.Karena setiap baris mewakili satu transaksi, kita perlu mengelompokkan data berdasarkan negara agar bisa melihat total pembelian secara keseluruhan. Tanpa proses ini, kita hanya melihat data transaksi individual, bukan gambaran besar per negara. Lebih lanjut, data dari group by ini mampu digunakan untuk menganalisis potensi pasar dan strategi distribusi."""

df_after = country_sales.head()
df_after

"""Tabel diatas menunjukkan perbedaan signifikan dengan tabel pertama, dimana pada tabel ini menyajikan dalam bentuk pengelompokkan jumlah barang yang dibeli dari satu negara berdasarkan quantity barang yang dibeli. Cukup berbeda dengan data mentah sebelumnya, dimana data tersebut dihitung secara terpisah bukan berkelompok. Terutama disajikan dalam bentuk pengurutan 5 negara terbanyak demi kenyaman penyajian data."""

st.header("Q3 — Top countries")
countries = (df_ready.groupby("Country")["Quantity"]
             .sum().sort_values(ascending=False).head(10).reset_index())
st.dataframe(countries)
fig3, ax3 = plt.subplots()
sns.barplot(data=countries, x="Quantity", y="Country", ax=ax3)
ax3.set_title("Top 10 Countries")
st.pyplot(fig3)

"""#Insight:
1. **Penjualan paling besar terpusat pada negara tertentu.** Mayoritas volume pembelian berasal dari satu atau dua negara utama, mencerminkan konsentrasi pasar.

2. **UK kemungkinan besar menjadi kontributor utama.** Hal ini dikarenakan banyaknya bisnis dari UK, maka wajar jika jumlah pembeliannya jauh lebih tinggi dari negara lain.

3. **Peluang ekspansi ke negara dengan volume menengah.** Negara dengan volume cukup tinggi (namun bukan teratas) dapat ditargetkan untuk promosi atau ekspansi pasar yang lebih masif.

4. **Negara dengan volume sangat kecil mungkin hanya mencerminkan satu atau dua pelanggan.** Ini menunjukkan pasar potensial yang belum tergarap atau hanya sebagai pembelian percobaan. Patut dipertimbangkan untuk konsentrasi pasar ke negara-negara tersebut

5. **Agregasi berdasarkan negara memberikan wawasan strategi distribusi** Banyaknya volume pembelian negara menunjukkan kebutuhan pasar yang akan mempengaruhi keputusan operasional, seperti kebutuhan terhadap gudang lokal, atau mana yang bisa dijangkau lewat partner reseller.

#Q4. Produk apa yang paling sering dibeli oleh masing-masing negara?"""

df_clean = df.dropna(subset=["Country", "Description", "Quantity"])
df_clean

country_product =  df_ready.groupby(["Country", "Description"])["Quantity"].sum().reset_index()

top_product_per_country = country_product.loc[country_product.groupby("Country")["Quantity"].idxmax()].sort_values(by="Quantity", ascending=False)
top_product_per_country.head(10)

"""Karena kita ingin melihat produk apa yang paling banyak dibeli oleh suatu negara, maka harus mengambil data produk pembelian paling atas dari masing-masing negara. <br><br>

Hasilnya ditampilkan dalam tabel diatas dalam 10 data teratas dengan alasan untuk mencapai titik fokus dalam kepuitusan bisnis yang lebih efektif, sehingga hanya memusatkan keputusan bisnis pada hal lebih urgent dibandingkan dengan hal lain. 10 data inilah yang akan divualisasikan.
"""

st.header("Q4 — Most popular product per country")
cp = (df_ready.groupby(["Country","Description"])["Quantity"].sum().reset_index())
top_per_country = cp.loc[cp.groupby("Country")["Quantity"].idxmax()].sort_values("Quantity", ascending=False)
st.dataframe(top_per_country.head(10))
fig4, ax4 = plt.subplots()
sns.barplot(data=top_per_country.head(10), x="Quantity", y="Country",
            hue="Description", dodge=False, ax=ax4)
ax4.set_title("Top Product per Country (Top 10)")
ax4.legend(bbox_to_anchor=(1.02,1), loc="upper left")
st.pyplot(fig4)

"""#Insight:
1. **Preferensi produk berbeda antar negara.** Setiap negara memiliki produk unggulan yang paling sering dibeli, mencerminkan minat atau kebutuhan yang spesifik. Sehingga akan mempengaruhi keputusan pemasaran yang dibutuhkan

2. **Produk teratas biasanya bernilai tinggi dalam jumlah pembelian.** Ini bisa jadi karena karakteristik produk yang populer untuk reseller atau stok besar. Ini akan mempengaruhi strategi pasar dan kesiapan operasional yang berlaku.

3. **Bisa jadi acuan untuk strategi regional.** Banyaknya suatu produk yang laku lebih banyak di negara yang berbeda menunjukan minat yang berbeda, sehingga memiliki pendekatan pemasarn yang berbeda, yang mampu berdampak pada startegi pemasaran yang berbeda juga.

4. **Mempermudah alokasi stok & distribusi.** Mengetahui produk terpopuler per negara membantu perusahaan merencanakan tindakan operasional lanjutan seperti keberadaan gudang lokal dan logistik lainnya.

#Q5. Produk apa yang paling banyak dibeli dalam jumlah besar (Quantity > 100)?

Sebelumnya, karena kita akan mengambil pembelian dalm jumlah besar, maka kita harus mengambil data yang memiliki data pembelian dengan Quantity diatas 100
"""

bulk_orders = df_ready[df_ready["Quantity"] > 100]
bulk_orders

bulk_top_products = bulk_orders.groupby("Description")["Quantity"].sum().sort_values(ascending=False).head(10).reset_index()
bulk_top_products.head(10)

"""Hasilnya ditampilkan dalam tabel diatas dalam 10 data teratas dengan alasan untuk mencapai titik fokus dalam kepuitusan bisnis yang lebih efektif, sehingga hanya memusatkan keputusan bisnis pada hal lebih urgent dibandingkan dengan hal lain. 10 data inilah yang akan divualisasikan.
"""

st.header("Q5. Produk dengan pembelian jumlah besar")

qty_threshold = st.sidebar.number_input("Minimum Quantity (bulk)", 1, 1000, 100, 1)
top_n = st.sidebar.slider("Top N", 5, 30, 10)

bulk_orders = df_ready[df_ready["Quantity"] > qty_threshold]
bulk_top_products = (bulk_orders.groupby("Description")["Quantity"]
                     .sum().sort_values(ascending=False).head(top_n).reset_index())

if bulk_top_products.empty:
    st.warning("Tidak ada transaksi di atas threshold yang dipilih.")
else:
    st.dataframe(bulk_top_products)

    fig, ax = plt.subplots(figsize=(8, 4))
    sns.barplot(data=bulk_top_products, x="Quantity", y="Description", ax=ax)
    ax.set_title(f"Top {top_n} Produk dengan Pembelian Jumbo (Quantity > {qty_threshold})")
    ax.set_xlabel("Total Quantity")
    ax.set_ylabel("Produk")
    fig.tight_layout()
    st.pyplot(fig)

"""#Insight:
1. **Pembelian dalam jumlah besar bukan kebetulan.** Produk-produk yang muncul dalam daftar ini memiliki pola pembelian berulang dalam jumlah sangat besar, menunjukkan bahwa pelanggan memang secara konsisten membeli dalam skala besar, bukan sekadar outlier satu kali.

2. **Ciri khas produk untuk grosir, reseller, atau keperluan massal.** Jenis produk ini kemungkinan besar digunakan untuk stok toko, hadiah event, kebutuhan perusahaan, atau bahkan produksi ulang (misalnya, untuk kerajinan tangan atau paket ulang tahun).

3. **Penting untuk manajemen logistik & stok.** Produk-produk ini sebaiknya diprioritaskan dalam stok massal, dan gudang karena permintaannya besar dan bisa memengaruhi ketersediaan barang secara signifikan jika stok tidak diatur.

4. **Target pasar potensial: pembeli B2B** Pelanggan yang membeli dalam jumlah besar cenderung bukan konsumen biasa, melainkan bisnis kecil-menengah (SME), reseller, atau pihak ketiga. Ini membuka peluang strategi pemasaran dan layanan khusus seperti penawaran grosir, diskon tiered, atau akun pelanggan khusus.

## Analisis multivariate pada kolom numerikal berupa :
- Correlation Heatmap + insight / observation **(10 poin)**

Sebelumnya kita ambil dahulu kolom numerikal, yaitu kolom yang tentunya memiliki nomor, yaitu yang bertipe 'float' dan 'int'
"""

numerical_df = df.select_dtypes(include=['float64', 'int64'])
numerical_df

correlation_matrix = numerical_df.corr()

"""Hal diatas dilakukan untuk mengetahui sejauh mana suatu kolom saling berhubungan satu sama lainnya, dan sejauh mana kedua variabel atau disebut dalam hal ini adalah 'kolom' bergerak bersama:
  - Nilai mendekati +1 → hubungan positif sempurna (jika satu naik, yang lain ikut naik).
  - Nilai -1 → hubungan negatif sempurna (jika satu naik, yang lain turun).
  - Nilai 0 → tidak ada hubungan linear.

Hasil perhitungan inilah yang akan divisualisasikan dalam heatmap
"""

st.header("Correlation heatmap")
num = df_ready.select_dtypes(include=["float64","int64"])
corr = num.corr(numeric_only=True)
fig5, ax5 = plt.subplots()
sns.heatmap(corr, annot=True, fmt=".2f", cmap="coolwarm", ax=ax5)
ax5.set_title("Correlation (numeric)")
st.pyplot(fig6)

"""#INSIGHT:
1. **Terdapat Hubungan Erat antara Harga, Kuantitas, dan Nilai Transaksi**
- Korelasi Quantity dan UnitPrice sebesar 0.73 menunjukkan bahwa barang dengan jumlah besar cenderung memiliki harga lebih tinggi, atau ada kecenderungan bahwa volume tinggi tidak selalu karena diskon.
- TotalPrice sangat berkorelasi dengan Quantity (0.94) dan UnitPrice (0.90).
  - Ini logis karena TotalPrice = Quantity × UnitPrice, tapi juga menunjukkan bahwa kedua komponen tersebut sama-sama dominan dalam membentuk nilai transaksi.

2. **Tidak Ada Bukti Bahwa Harga Rendah Mendorong Pembelian Massal**
- Korelasi positif antara Quantity dan UnitPrice menandakan bahwa penurunan harga tidak menjadi pendorong utama pembelian dalam jumlah besar.
- Artinya:
  - Diskon atau harga murah bukan satu-satunya pemicu tingginya volume transaksi.
  - Faktor seperti kebutuhan besar, pembelian rutin, atau segmentasi konsumen (grosir vs retail) mungkin lebih berperan.

3. **TotalPrice Valid untuk Segmentasi Nilai Transaksi**
- Korelasi yang kuat dari TotalPrice terhadap kedua variabel dasar menjadikan metrik ini sangat representatif dalam analisis pelanggan bernilai tinggi, bundling produk, atau strategi diskon terarah..

# Implikasi Bisnis dan Strategi
1. **Fokus pada Produk Bernilai Tinggi, Bukan Sekadar Volume**
- Karena TotalPrice berkorelasi kuat baik dengan jumlah (Quantity) maupun harga (UnitPrice), maka:
  - Strategi: Prioritaskan produk yang memiliki harga relatif tinggi dan laku dalam jumlah besar.
- Tidak semua volume besar berasal dari diskon → jangan hanya promosi ke produk termurah.
- Segmentasi harga premium tetap layak untuk ditawarkan ke pembeli besar.

2. **Optimalisasi Penawaran Bundling & Grosir**
- Korelasi antara Quantity dan UnitPrice cukup tinggi (+0.73):
  - Menunjukkan produk mahal juga dibeli dalam jumlah besar, bisa jadi oleh pembeli bisnis/reseller.
- Strategi: Tawarkan paket bundling atau skema grosir untuk produk-produk dengan margin tinggi.
- Hal ini cocok untuk:
  - Bulk buyer
  - Langganan tetap (subscription)
  - Pelanggan loyal dengan pembelian berulang

3. **Gunakan TotalPrice untuk Segmentasi dan Targeting**
- Karena TotalPrice merepresentasikan nilai transaksi sebenarnya dan sangat korelatif, kamu bisa:
  - Strategi: Bangun model segmentasi pelanggan berdasarkan total belanja (TotalPrice)
- Ini berguna untuk:
  - Memberikan penawaran eksklusif ke high spenders
  - Menyusun program loyalitas
  - Menyesuaikan biaya akuisisi pelanggan secara efisien

4. **Evaluasi Peran Diskon — Tidak Selalu Efektif**
- Korelasi tidak negatif antara UnitPrice dan Quantity → diskon bukan faktor utama volume.
- Strategi: Fokus pada value-driven marketing, bukan price-cutting semata.
- Gunakan pendekatan promosi yang menekankan:
  - Kualitas produk
  - Relevansi penggunaan (seasonal, kebutuhan khusus)
  - Bundle yang meningkatkan perceived value

#KESIMPULAN AKHIR:
1. Data Understanding
  - Dataset terdiri dari data transaksi penjualan online, termasuk kolom seperti InvoiceNo, Description, Quantity, InvoiceDate, UnitPrice, CustomerID, dan Country.
  - Ditemukan adanya missing values di beberapa kolom penting (Description, CustomerID, Country), yang harus dibersihkan untuk analisis yang akurat.
  - Data memiliki format waktu (InvoiceDate) yang perlu dikonversi ke format datetime agar dapat dimanipulasi berdasarkan waktu.

2. Feature Engineering
  - Dihapus baris dan kolom dengan data kosong dan tidak perlu di kolom kunci agar grouping tidak menghasilkan noise.
  - Dilakukan konversi InvoiceDate ke format datetime untuk kebutuhan analisis berbasis waktu.
  - Dibuat kolom Month dari InvoiceDate untuk analisis tren penjualan per bulan.
  - (Opsional) Dibuat kolom TotalPrice = Quantity * UnitPrice untuk potensi analisis pendapatan.

3. Analisis Berdasarkan Pertanyaan (1–5)
  1. Pertanyaan 1: Produk apa yang paling banyak terjual?
    - Dilakukan agregasi total Quantity per Description.
    - Produk terlaris ternyata memiliki volume tinggi, mengindikasikan potensi bundling, diskon, atau pengulangan pembelian.

  2. Pertanyaan 2: Pola pembelian bulanan seperti apa?
    - Dikelompokkan berdasarkan Month dan dijumlahkan total Quantity.
    - Terlihat adanya fluktuasi penjualan, dan potensi lonjakan di bulan tertentu (misalnya menjelang akhir tahun).

  3. Pertanyaan 3: Negara mana yang paling banyak membeli?
    - Data dikelompokkan berdasarkan Country, diurutkan berdasarkan total Quantity.
    - Terlihat bahwa mayoritas penjualan berasal dari beberapa negara dominan, sedangkan negara lain berkontribusi kecil.

  4.  Pertanyaan 4: Produk apa yang paling populer di setiap negara?
    - Dikelompokkan berdasarkan kombinasi Country dan Description, kemudian dihitung total Quantity.
    - Diperlukan pembersihan data sebelum analisis karena kombinasi ini sangat sensitif terhadap missing value.

  5.  Pertanyaan 5: Produk apa yang paling sering dibeli dalam jumlah besar (Quantity > 100)?
    - Difilter data untuk transaksi besar, lalu di-group berdasarkan Description.
    - Mengungkap produk-produk dengan permintaan dalam jumlah besar yang cocok untuk strategi grosir atau pelanggan B2B.

#Insight Umum (Gabungan dari Semua Pertanyaan)
  1. Permintaan terpusat pada produk tertentu — Terlihat konsistensi permintaan tinggi untuk beberapa produk, baik di level global maupun per negara.

  2. Banyak pembelian massal: Transaksi besar menunjukkan adanya pembeli tipe grosir/reseller yang berbeda dari pelanggan eceran biasa.

  3. Tren waktu penting untuk strategi: Analisis per bulan menunjukkan musim penjualan yang dapat dimanfaatkan untuk promosi atau pengelolaan stok.

  4. Negara tertentu mendominasi penjualan: Mengindikasikan pasar inti yang bisa difokuskan untuk ekspansi, pemasaran, atau pengiriman lokal.

  5. Filtering transaksi besar mengungkap insight tersembunyi: Dengan menyaring data berdasarkan Quantity > 100, terlihat produk-produk kunci yang berkontribusi signifikan pada total volume.
"""

